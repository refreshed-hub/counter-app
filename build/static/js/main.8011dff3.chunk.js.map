{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/counterComponent.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Counter","state","count","handleIncrement","console","log","setState","handleDecrement","Fragment","className","this","getBadgeClasses","formatCount","onClick","classes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAe,I,YCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCC8CCQ,E,4MAlDbC,MAAQ,CACNC,MAAO,G,EAQTC,gBAAkB,WAChBC,QAAQC,MACR,EAAKC,SAAS,CAAEJ,MAAO,EAAKD,MAAMC,MAAQ,K,EAG5CK,gBAAkB,WAChB,EAAKD,SAAS,CAAEJ,MAAO,EAAKD,MAAMC,MAAQ,K,4CAG5C,WACE,OACE,eAAC,IAAMM,SAAP,WACE,sBAAMC,UAAWC,KAAKC,kBAAtB,SAA0CD,KAAKE,gBAC/C,wBACEC,QAASH,KAAKP,gBACdM,UAAU,+BAFZ,uBAMA,wBACEI,QAASH,KAAKH,gBACdE,UAAU,2BAFZ,4B,6BAUN,WACE,IAAIK,EAAU,mBAEd,OADAA,GAAgC,IAArBJ,KAAKT,MAAMC,MAAc,UAAY,Y,yBAIlD,WAAe,IACLA,EAAUQ,KAAKT,MAAfC,MACR,OAAiB,IAAVA,EAAc,OAASA,M,GA/CZa,aCMtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B7B,M","file":"static/js/main.8011dff3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    count: 0,\n  };\n\n  // constructor() {\n  //   super();\n  //   this.handleIncrement = this.handleIncrement.bind(this);\n  // }\n\n  handleIncrement = () => {\n    console.log();\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  handleDecrement = () => {\n    this.setState({ count: this.state.count - 1 });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        <button\n          onClick={this.handleIncrement}\n          className=\"btn btn-secondary btn-sm m-2\"\n        >\n          Increment\n        </button>\n        <button\n          onClick={this.handleDecrement}\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Decrement\n        </button>\n      </React.Fragment>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Counter from \"./components/counterComponent\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Counter />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}